[DEFAULT]
trove_auth_url = http://192.168.152.191:5000/v2.0
nova_compute_url = http://192.168.152.192:8774/v2
cinder_url = http://192.168.152.191:8776/v1
swift_url = http://192.168.152.191:8080/v1/AUTH_
heat_url = http://192.168.152.194:8004/v1
sql_connection = mysql://trove:trove@192.168.152.191/trove
notifier_queue_hostname = 192.168.152.191

nova_proxy_admin_user = admin
nova_proxy_admin_pass = openstack
nova_proxy_admin_tenant_name = admin

# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = True

use_heat = True

# Updates service and instance task statuses if instance failed become active
update_status_on_fail = False

# AMQP Connection info
rabbit_password=guest

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
# sql_connection = mysql://trove:trove@localhost/trove

# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
# MySQL uses a default `wait_timeout` of 8 hours, after which it will drop
# idle connections. This can result in 'MySQL Gone Away' exceptions. If you
# notice this, you can lower this value to ensure that SQLAlchemy reconnects
# before MySQL can drop the connection.
sql_idle_timeout = 3600

#DB Api Implementation
db_api_implementation = trove.db.sqlalchemy.api

# Configuration options for talking to nova via the novaclient.
trove_auth_url = http://0.0.0.0:5000/v2.0
nova_compute_url = http://localhost:8774/v2
cinder_url = http://localhost:8776/v1
swift_url = http://localhost:8080/v1/AUTH_

# Config options for enabling volume service
trove_volume_support = True
block_device_mapping = vdb
device_path = /dev/vdb
mount_point = /var/lib/mysql
volume_time_out=30
server_delete_time_out=480

# Configuration options for talking to nova via the novaclient.
# These options are for an admin user in your keystone config.
# It proxy's the token received from the user to send to nova via this admin users creds,
# basically acting like the client via that proxy token.
nova_proxy_admin_user = admin
nova_proxy_admin_pass = openstack
nova_proxy_admin_tenant_name = admin

# Manager impl for the taskmanager
taskmanager_manager=trove.taskmanager.manager.Manager

# Manager sends Exists Notifications
exists_notification_transformer = trove.extensions.mgmt.instances.models.NovaNotificationTransformer
exists_notification_ticks = 30
notification_service_id = mysql:2f3ff068-2bfb-4f70-9a9d-a6bb65bc084b

# Trove DNS
trove_dns_support = False
dns_account_id = 123456
dns_auth_url = http://192.168.152.191:5000/v2.0
dns_username = admin
dns_passkey = openstack
dns_ttl = 3600
dns_domain_name = 'trove.com.'
dns_domain_id = 11111111-1111-1111-1111-111111111111
dns_driver = trove.dns.designate.driver.DesignateDriver
dns_instance_entry_factory = trove.dns.designate.driver.DesignateInstanceEntryFactory
dns_endpoint_url = http://192.168.152.194/v1/
dns_service_type = dns

# Trove Security Groups for Instances
trove_security_groups_support = True
trove_security_group_rule_cidr = 0.0.0.0/0

# Guest related conf
agent_heartbeat_time = 10
agent_call_low_timeout = 5
agent_call_high_timeout = 150

# Whether to use nova's contrib api for create server with volume
use_nova_server_volume = False

# Config option for filtering the IP address that DNS uses
network_label_regex = ^private$
#ip_regex = ^(15.|123.)

# Datastore templates
template_path = /etc/trove/templates/

# ============ notifer queue kombu connection options ========================

notifier_queue_hostname = 192.168.152.191
notifier_queue_userid = guest
notifier_queue_password = guest
notifier_queue_ssl = False
notifier_queue_port = 5672
notifier_queue_virtual_host = /
notifier_queue_transport = memory

# usage notifications
notification_driver=trove.openstack.common.notifier.rpc_notifier
control_exchange=trove

# ============ Logging information =============================
log_dir = /var/log/trove
log_file = trove-taskmanager.log

# ============ PyDev remote dubugging =============================

# Enable or disable pydev remote debugging.
# There are three values allowed: 'disabled', 'enabled' and 'auto'
# If value is 'auto' tries to connect to remote debugger server,
# but in case of error continue running with disabled debugging
pydev_debug = disabled
rpc_backend = trove.openstack.common.rpc.impl_kombu
rabbit_host = 192.168.152.191

# remote debug server host and port options
#pydev_debug_host = localhost
#pydev_debug_port = 5678

# path to pydevd library. It will be used if pydevd is absent in sys.path
#pydev_path = <path>

# ================= Guestagent related ========================
#guest_config = $pybasedir/etc/trove/trove-guestagent.conf.sample
#cloudinit_location = /etc/trove/cloudinit

# ================= Security groups related ========================
# Each future datastore implementation should implement
# its own oslo group with defined in it:
# - tcp_ports; upd_ports;

[mysql]
# Format (single port or port range): A, B-C
# where C greater than B
tcp_ports = 3306

[redis]
# Format (single port or port range): A, B-C
# where C greater than B
tcp_ports = 6379

[cassandra]
tcp_ports = 7000, 7001, 9042, 9160

[couchbase]
tcp_ports = 8091, 8092, 4369, 11209-11211, 21100-21199
