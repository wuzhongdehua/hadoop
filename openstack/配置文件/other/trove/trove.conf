[DEFAULT]
trove_auth_url = http://192.168.152.191:5000/v2.0
nova_compute_url = http://192.168.152.192:8774/v2
cinder_url = http://192.168.152.191:8776/v1
heat_url = http://192.168.152.194:8004/v1
swift_url = http://192.168.152.191:8080/v1/AUTH_
sql_connection = mysql://trove:trove@192.168.152.191/trove
notifier_queue_hostname = 192.168.152.191
rpc_backend = trove.openstack.common.rpc.impl_kombu
rabbit_host = 192.168.152.191
rabbit_password = guest
# Show more verbose log output (sets INFO log level output)
verbose=True

# Show debugging output in logs (sets DEBUG log level output)
debug=True

# Address to bind the API server
bind_host=0.0.0.0

# Port the bind the API server to
bind_port=8779

# Number of child processes to run
#trove_api_workers=5

# AMQP Connection info
#rabbit_password=f7999d1955c5014aa32c

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
# sql_connection = sqlite:///trove_test.sqlite
#sql_connection=mysql://trove:trove@localhost/trove
#sql_connection=postgresql://trove:trove@localhost/trove

# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
# MySQL uses a default `wait_timeout` of 8 hours, after which it will drop
# idle connections. This can result in 'MySQL Gone Away' exceptions. If you
# notice this, you can lower this value to ensure that SQLAlchemy reconnects
# before MySQL can drop the connection.
sql_idle_timeout=3600
mysql.usage_timeout = 600

# Maximum line size of message headers to be accepted.
# max_header_line may need to be increased when using large tokens
# (typically those generated by the Keystone v3 API with big service
# catalogs)
# max_header_line = 16384

#DB Api Implementation
db_api_implementation="trove.db.sqlalchemy.api"

# Path to the extensions
#api_extensions_path=trove/extensions/routes
api_extensions_path=/usr/lib/python2.6/site-packages/trove/extensions/routes
guest_config = /etc/trove/conf.d/guest_info
cloudinit_location = /etc/trove/cloudinit

# Configuration options for talking to nova via the novaclient.
#trove_auth_url=http://0.0.0.0:5000/v2.0
#nova_compute_url=http://localhost:8774/v2
#cinder_url=http://localhost:8776/v1
#swift_url=http://localhost:8080/v1/AUTH_

use_heat = True
template_path = /etc/trove/templates/

# Config option for showing the IP address that nova doles out
network_label_regex=^private$
ip_regex=^(15.|123.)

# Config options for enabling volume service
trove_volume_support=True
block_device_mapping=vdb
device_path=/dev/vdb
# Maximum volume size for an instance
max_accepted_volume_size=100
max_instances_per_user=5
# Maximum volume capacity (in GB) spanning across all trove volumes per tenant
max_volumes_per_user=100
max_backups_per_user=5
volume_time_out=30

# Config options for rate limits
http_get_rate=200
http_post_rate=200
http_put_rate=200
http_delete_rate=200

# Trove DNS
trove_dns_support=False
dns_account_id=123456
dns_auth_url=http://192.168.152.191:5000/v2.0
dns_username=admin
dns_passkey=openstack
dns_ttl=3600
dns_domain_name='trove.com.'
dns_domain_id=11111111-1111-1111-1111-111111111111
dns_driver=trove.dns.designate.driver.DesignateDriver
dns_instance_entry_factory=trove.dns.designate.driver.DesignateInstanceEntryFactory
dns_endpoint_url=http://192.168.152.194/v1/
dns_service_type=dns

# Taskmanager queue name
taskmanager_queue=taskmanager

# Auth
admin_roles=admin

# Users to ignore for user create/list/delete operations
ignore_users=os_admin,root
ignore_dbs=lost+found,mysql,information_schema

# Guest related conf
agent_heartbeat_time=10
agent_call_low_timeout=5
agent_call_high_timeout=150

# Reboot time out for instances
reboot_time_out=60

# Trove api-paste file name
#api_paste_config=/etc/trove/api-paste.init
api_paste_config=/usr/share/trove/trove-dist-paste.ini


# ============ notifer queue kombu connection options ========================

notifier_queue_hostname=192.168.152.191
notifier_queue_userid=guest
notifier_queue_password=guest
notifier_queue_ssl=False
notifier_queue_port=5672
notifier_queue_virtual_host=/
notifier_queue_transport=memory

control_exchange=trove

# ============ Logging information =============================
log_dir=/var/log/trove
log_file=trove-api.log


# ============ SSL configuration (and enablement) =============================
# In order to enable SSL for the trove api server, uncomment
# the cert_file and key_file - and of course have those files
# accessible. The existence of those setting and files will
# enable SSL.

[ssl]

#cert_file=/path/to/server.crt
#key_file=/path/to/server.key
#optional:
#ca_file=/path/to/ca_file

[mysql]

root_on_create=False

# ================= Security groups related ========================
# Each future datastore implementation should implement
# its own oslo group with defined in it:
# - tcp_ports; upd_ports;

[mysql]
# Format (single port or port range): A, B-C
# where C greater than B
tcp_ports=3306

[redis]
# Format (single port or port range): A, B-C
# where C greater than B
tcp_ports=6379

[cassandra]
tcp_ports=7000,7001,9042,9160

[couchbase]
tcp_ports=8091,8092,4369,11209-11211,21100-21199

[keystone_authtoken]

#
# Options defined in keystoneclient.middleware.auth_token
#

# Prefix to prepend at the beginning of the path (string
# value)
#auth_admin_prefix=

# Host providing the admin Identity API endpoint (string
# value)
auth_host=192.168.152.191

# Port of the admin Identity API endpoint (integer value)
auth_port=35357

# Protocol of the admin Identity API endpoint(http or https)
# (string value)
auth_protocol=http

# Complete public Identity API endpoint (string value)
#auth_uri=<None>

# API version of the admin Identity API endpoint (string
# value)
#auth_version=<None>

# Do not handle authorization requests within the middleware,
# but delegate the authorization decision to downstream WSGI
# components (boolean value)
#delay_auth_decision=false

# Request timeout value for communicating with Identity API
# server. (boolean value)
#http_connect_timeout=<None>

# How many times are we trying to reconnect when communicating
# with Identity API Server. (integer value)
#http_request_max_retries=3

# Allows to pass in the name of a fake http_handler callback
# function used instead of httplib.HTTPConnection or
# httplib.HTTPSConnection. Useful for unit testing where
# network is not available. (string value)
#http_handler=<None>

# Single shared secret with the Keystone configuration used
# for bootstrapping a Keystone installation, or otherwise
# bypassing the normal authentication process. (string value)
#admin_token=<None>

# Keystone account username (string value)
admin_user=admin

# Keystone account password (string value)
admin_password=openstack

# Keystone service account tenant name to validate user tokens
# (string value)
admin_tenant_name=admin

# Env key for the swift cache (string value)
#cache=<None>

# Required if Keystone server requires client certificate
# (string value)
#certfile=<None>

# Required if Keystone server requires client certificate
# (string value)
#keyfile=<None>

# A PEM encoded Certificate Authority to use when verifying
# HTTPs connections. Defaults to system CAs. (string value)
#cafile=<None>

# Verify HTTPS connections. (boolean value)
#insecure=false

# Directory used to cache files related to PKI tokens (string
# value)
#signing_dir=<None>

# If defined, the memcache server(s) to use for caching (list
# value)
# Deprecated group/name - [DEFAULT]/memcache_servers
#memcached_servers=<None>

# In order to prevent excessive requests and validations, the
# middleware uses an in-memory cache for the tokens the
# Keystone API returns. This is only valid if memcache_servers
# is defined. Set to -1 to disable caching completely.
# (integer value)
#token_cache_time=300

# Value only used for unit testing (integer value)
#revocation_cache_time=1

# (optional) if defined, indicate whether token data should be
# authenticated or authenticated and encrypted. Acceptable
# values are MAC or ENCRYPT.  If MAC, token data is
# authenticated (with HMAC) in the cache. If ENCRYPT, token
# data is encrypted and authenticated in the cache. If the
# value is not one of these options or empty, auth_token will
# raise an exception on initialization. (string value)
#memcache_security_strategy=<None>

# (optional, mandatory if memcache_security_strategy is
# defined) this string is used for key derivation. (string
# value)
#memcache_secret_key=<None>

# (optional) indicate whether to set the X-Service-Catalog
# header. If False, middleware will not ask for service
# catalog on token validation and will not set the X-Service-
# Catalog header. (boolean value)
#include_service_catalog=true

# Used to control the use and type of token binding. Can be
# set to: "disabled" to not check token binding. "permissive"
# (default) to validate binding information if the bind type
# is of a form known to the server and ignore it if not.
# "strict" like "permissive" but if the bind type is unknown
# the token will be rejected. "required" any form of token
# binding is needed to be allowed. Finally the name of a
# binding method that must be present in tokens. (string
# value)
#enforce_token_bind=permissive
